<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>k-means中利用elbow method确定k值</title>
    <link href="/2023/07/22/k-means%E4%B8%AD%E5%88%A9%E7%94%A8elbow-method%E7%A1%AE%E5%AE%9Ak%E5%80%BC/"/>
    <url>/2023/07/22/k-means%E4%B8%AD%E5%88%A9%E7%94%A8elbow-method%E7%A1%AE%E5%AE%9Ak%E5%80%BC/</url>
    
    <content type="html"><![CDATA[<p>K-means算法的K值<code>需要人为给出所需要聚类的类别数目k，那么k的选择对于结果影响很大</code>，通常k值的选择通常需要根据实际进行手动选择，当然，仅仅是手动选择感觉有点逊。</p><p>下面我将简要介绍一下利用”Elbow method”(手肘法则)选择k值的方法。</p><p>其实其原理很简单，就是通过设定不同的k值，然后画出每一个k值对应的损失。</p><p>然后找出“手肘”的位置，就是最佳的聚类数目k。</p><blockquote><h4 id="有个小疑问："><a href="#有个小疑问：" class="headerlink" title="有个小疑问："></a>有个小疑问：</h4><p>损失不应该是越小越好吗？</p><p>理论上来说这这样的，但是当我们把n个数据点聚成n个类别，此时损失为0，然而这并没有什么意义（个人感觉有点过拟合的意思了）</p><p>而手肘位置的损失下降速度比较快，也相当于在过拟合和损失之间进行了折中。</p></blockquote><p>下面我直接利用<code>yellowbrick</code>包进行k值的”Elbow method”选择</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.cluster <span class="hljs-keyword">import</span> KMeans<br><span class="hljs-keyword">from</span> yellowbrick.cluster <span class="hljs-keyword">import</span> SilhouetteVisualizer, InterclusterDistance, KElbowVisualizer<br><span class="hljs-keyword">from</span> yellowbrick.datasets.loaders <span class="hljs-keyword">import</span> load_nfl<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>X, y = load_nfl()<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">利用elbow method也就是“手肘法则”选择k-means中的k值</span><br><span class="hljs-string">原理就是通过设定不同的k值，然后画出每一个k值对应的损失</span><br><span class="hljs-string">然后找出“手肘”的位置，就是最佳的聚类数目k。</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>model = KMeans(random_state=<span class="hljs-number">4</span>)<br>visualizer = KElbowVisualizer(model, k=(<span class="hljs-number">2</span>,<span class="hljs-number">10</span>))<br>visualizer.fit(X)<br>visualizer.show()<br><br><span class="hljs-comment"># 使用最佳的k值(elbow_value_)进行k-means聚类</span><br>model = KMeans(n_clusters=visualizer.elbow_value_, random_state=<span class="hljs-number">4</span>)<br>model.fit(X)<br><br><span class="hljs-comment"># 可视化聚类结果</span><br>fig, ax = plt.subplots(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, figsize=(<span class="hljs-number">8</span>,<span class="hljs-number">8</span>))<br><br><br>sil_visualizer = SilhouetteVisualizer(model, colors=<span class="hljs-string">&#x27;yellowbrick&#x27;</span>, ax=ax[<span class="hljs-number">0</span>])<br>sil_visualizer.fit(X)<br>sil_visualizer.finalize()<br><br><br>icd_visualizer = InterclusterDistance(model, ax=ax[<span class="hljs-number">1</span>])<br>icd_visualizer.fit(X)<br>icd_visualizer.finalize()<br><br><span class="hljs-comment"># 保存图片</span><br>plt.savefig(<span class="hljs-string">&quot;kmeans_visualization.png&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/elbow.png"></p><p>如图所示，自动选择出来的k值为4</p><p>参考：<a href="https://www.zhihu.com/question/279825061/answer/1686762604">https://www.zhihu.com/question/279825061/answer/1686762604</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>python, machine-learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决warning问题影响输出观感的问题</title>
    <link href="/2023/07/17/%E8%A7%A3%E5%86%B3warning%E9%97%AE%E9%A2%98%E5%BD%B1%E5%93%8D%E8%BE%93%E5%87%BA%E8%A7%82%E6%84%9F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2023/07/17/%E8%A7%A3%E5%86%B3warning%E9%97%AE%E9%A2%98%E5%BD%B1%E5%93%8D%E8%BE%93%E5%87%BA%E8%A7%82%E6%84%9F%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>我在写一些与matplotlib或者机器学习相关的函数时，有时会出现一些讨厌的<code>userwarning</code>，而一般情况下它们并不会影响我代码的准确性，但是很影响我观察输出时候的体验。</p><p><del>我感觉我写的没问题</del>，懒得去深究了</p><blockquote><p>其实就是偷个懒，有时候还是要看看是啥问题的，比如vector的shape出了点问题，没有进行合适的reshape什么的。</p></blockquote><p>我直接上代码（ps：真的是懒人专用，不要轻易使用）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> warnings<br>warnings.filterwarnings(<span class="hljs-string">&quot;ignore&quot;</span>, category=UserWarning)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python中matplotlib、seaborn绘图中文乱码解决方案</title>
    <link href="/2023/07/16/Python%E4%B8%ADmatplotlib%E3%80%81seaborn%E7%BB%98%E5%9B%BE%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2023/07/16/Python%E4%B8%ADmatplotlib%E3%80%81seaborn%E7%BB%98%E5%9B%BE%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<p>在用python绘制图像时，有时候会出现中文在图上都变成了小方框，经过查资料，我找到了如下解决方案供参考： </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib <span class="hljs-keyword">as</span> mpl<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><span class="hljs-comment"># Use Chinese</span><br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>]=[<span class="hljs-string">&#x27;SimHei&#x27;</span>] <span class="hljs-comment">#用来正常显示中文标签</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>]=<span class="hljs-literal">False</span> <span class="hljs-comment">#用来正常显示负号</span><br>mpl.rcParams[<span class="hljs-string">&#x27;font.family&#x27;</span>]=<span class="hljs-string">&#x27;Heiti TC&#x27;</span> <span class="hljs-comment"># 修改了全局变量</span><br>mpl.rcParams[<span class="hljs-string">&#x27;font.size&#x27;</span>]=<span class="hljs-number">10</span> <span class="hljs-comment">#设置字体大小</span><br></code></pre></td></tr></table></figure><p>无论是用<code>jieba</code>进行中文词云还是想在matplotlib或seaborn画出的图上用中文作为标题、坐标轴或者标注，这个都可以完美解决。</p><p><em>注意，我使用的是apple silicon的MacBook， <code>可能一些地方不太相同</code> 比如字体’Simhei’，有的系统可能并非自带这个字体。如果想知道系统上都有什么字体，可以参照如下方法：</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> font_manager<br><span class="hljs-comment"># 去重</span><br>font_set = &#123;f.name <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> font_manager.fontManager.ttflist&#125;<br><span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> font_set:<br>    <span class="hljs-built_in">print</span>(f)<br></code></pre></td></tr></table></figure><p>大概就是这样，留在博客上算是给自己做一个记录！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>暑假计划</title>
    <link href="/2023/07/15/%E6%9A%91%E5%81%87%E8%AE%A1%E5%88%92/"/>
    <url>/2023/07/15/%E6%9A%91%E5%81%87%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<p>想减肥，想旅游，想学习，想和朋友一起好好玩，当然，也不会忘了给老师搬砖！</p><p>加油加油！！！</p>]]></content>
    
    
    
    <tags>
      
      <tag>myself</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2023/07/15/test/"/>
    <url>/2023/07/15/test/</url>
    
    <content type="html"><![CDATA[<p>今天啥也没干，就是善于休息！</p><p>补充一句，休息一下挺好的，喜欢休息，就要休息，幸福的生活就是每天吃饱了睡，睡饱了吃！</p><p><em>建好了我自己的博客还是有点开心的嘿嘿</em></p>]]></content>
    
    
    
    <tags>
      
      <tag>myself</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hello</title>
    <link href="/2023/07/14/hello/"/>
    <url>/2023/07/14/hello/</url>
    
    <content type="html"><![CDATA[<p>这是我按照教程搭建个人主页后写的第一篇博客！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/14/hello-world/"/>
    <url>/2023/07/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
